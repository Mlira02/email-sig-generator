{"ast":null,"code":"var _jsxFileName = \"/Users/andrewuebe/email-sig-generator/src/components/Form.js\";\nimport React, { Component } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport DoubleInputStep from \"./DoubleInputStep\";\nimport InputStep from \"./InputStep\";\nimport Button from \"./Button\";\nimport CheckboxStep from \"./CheckboxStep\";\nimport DegreeInfo from \"./DegreeInfo\";\nimport ParentInfo from \"./ParentInfo\";\nimport PronounStep from \"./PronounStep\";\nimport AddressOptions from \"./AddressOptions\";\nimport UniversityProgramming from \"./UniversityProgramming\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport AddIcon from \"@material-ui/icons/AddBoxOutlined\";\nexport default class Form extends Component {\n  constructor() {\n    super();\n    this.state = {\n      firstNameDefault: \"\",\n      lastNameDefault: \"\"\n    };\n  }\n\n  render() {\n    const undergradDegrees = this.props.underGradInfo;\n    const gradDegrees = this.props.gradInfo;\n    const parentDegrees = this.props.parentInfo;\n    const UndergradField = React.createElement(\"div\", {\n      className: \"form-step degrees\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }, undergradDegrees.map((degree, index) => React.createElement(DegreeInfo, {\n      key: index,\n      arrayID: index,\n      handleDegreeChange: this.props.handleDegreeChange,\n      fieldDefaultVals: [\"\", this.props.globalState.underGradInfo[index].year],\n      gradDegree: false,\n      isYearValid: degree.isYearValid,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    })));\n    const GradField = React.createElement(\"div\", {\n      className: \"form-step degrees\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, gradDegrees.map((degree, index) => React.createElement(DegreeInfo, {\n      key: index,\n      arrayID: index,\n      handleRemoveDegree: this.props.handleRemoveDegree,\n      handleDegreeChange: this.props.handleDegreeChange,\n      fieldDefaultVals: [this.props.globalState.gradInfo[index].degree, this.props.globalState.gradInfo[index].year],\n      gradDegree: true,\n      isYearValid: degree.isYearValid,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"add-degree\",\n      onClick: this.props.handleAddDegree,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, React.createElement(IconButton, {\n      onClick: this.props.handleAddDegree,\n      \"aria-label\": \"add a degree\",\n      label: \"test\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, React.createElement(AddIcon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    })), \"Add Northwestern Degree\"));\n    const ParentField = React.createElement(\"div\", {\n      className: \"form-step degrees\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, parentDegrees.map((degree, index) => React.createElement(ParentInfo, {\n      key: index,\n      arrayID: index,\n      handleRemoveDegree: this.props.handleRemoveDegree,\n      handleDegreeChange: this.props.handleDegreeChange,\n      fieldDefaultVals: [this.props.globalState.parentInfo[index].degree, this.props.globalState.parentInfo[index].year],\n      isYearValid: degree.isYearValid,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"add-degree\",\n      onClick: this.props.handleAddParentDegree,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, React.createElement(IconButton, {\n      onClick: this.props.handleAddParentDegree,\n      \"aria-label\": \"add a degree\",\n      label: \"test\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, React.createElement(AddIcon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    })), \"Add another\"));\n    const GenerateSigError = React.createElement(\"div\", {\n      className: \"error-messages\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }, \"You must fill all required fields (indicated with a *) before generating a signature.\");\n    return React.createElement(\"article\", {\n      className: \"sig-form\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }, \"Name\"), React.createElement(DoubleInputStep, {\n      fieldName: [\"firstName\", \"lastName\"],\n      fieldLabel: [\"First Name\", \"Last Name\"],\n      handleFieldChange: this.props.handleFieldChange,\n      fieldDefaultVals: [this.props.globalState.firstName, this.props.globalState.lastName],\n      isRequired: [true, true],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }), React.createElement(InputStep, {\n      fieldName: \"middleName\",\n      fieldLabel: \"Middle or Former Name (Optional)\",\n      fieldDefaultVals: this.props.globalState.middleName,\n      handleFieldChange: this.props.handleFieldChange,\n      isRequired: false,\n      halfWidth: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    }), React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129\n      },\n      __self: this\n    }, \"Alumni Designation\"), React.createElement(\"div\", {\n      className: \"checkboxes\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"form-step\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131\n      },\n      __self: this\n    }, React.createElement(CheckboxStep, {\n      fieldName: \"Are You a Northwestern Undergraduate Alum?\",\n      handleAlumToggle: this.props.handleUndergradAlumToggle,\n      isChecked: this.props.globalState.isUndergradAlum,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132\n      },\n      __self: this\n    }), this.props.isUndergradAlum && UndergradField), React.createElement(\"div\", {\n      className: \"form-step\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139\n      },\n      __self: this\n    }, React.createElement(CheckboxStep, {\n      fieldName: \"Are You a Northwestern Graduate/Professional Degree Holder?\",\n      handleAlumToggle: this.props.handleGradAlumToggle,\n      isChecked: this.props.globalState.isGradAlum,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140\n      },\n      __self: this\n    }), this.props.isGradAlum && GradField), React.createElement(\"div\", {\n      className: \"form-step\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147\n      },\n      __self: this\n    }, React.createElement(CheckboxStep, {\n      fieldName: \"Are You the Parent/Grandparent of a Northwestern Student or Graduate?\",\n      handleAlumToggle: this.props.handleParentAlumToggle,\n      isChecked: this.props.globalState.isParentAlum,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148\n      },\n      __self: this\n    }), this.props.isParentAlum && ParentField)), React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156\n      },\n      __self: this\n    }, \"Job\"), React.createElement(DoubleInputStep, {\n      fieldName: [\"title\", \"department\"],\n      fieldLabel: [\"Job Title\", \"Department\"],\n      handleFieldChange: this.props.handleFieldChange,\n      fieldDefaultVals: [this.props.globalState.title, this.props.globalState.department],\n      autoComplete: true,\n      isRequired: [true, true],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157\n      },\n      __self: this\n    }), React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168\n      },\n      __self: this\n    }, \"Pronouns\"), React.createElement(\"div\", {\n      className: \"sub-head-helper\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169\n      },\n      __self: this\n    }, \"Optional\"), React.createElement(PronounStep, {\n      fieldName: [\"subject\", \"object\", \"possessive\"],\n      fieldLabel: [\"Subject\", \"Object\", \"Possessive\"],\n      handlePronounChange: this.props.handlePronounChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170\n      },\n      __self: this\n    }), React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175\n      },\n      __self: this\n    }, \"Address\"), React.createElement(AddressOptions, {\n      handleFieldChange: this.props.handleFieldChange,\n      fieldDefaultVals: this.props.globalState.address,\n      isRequired: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176\n      },\n      __self: this\n    }), React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181\n      },\n      __self: this\n    }, \"Contact Information\"), React.createElement(\"div\", {\n      className: \"sub-head-helper\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182\n      },\n      __self: this\n    }, \"Cell phone number is optional\"), React.createElement(DoubleInputStep, {\n      fieldName: [\"officePhoneNum\", \"cellPhoneNum\"],\n      fieldLabel: [\"Office Phone Number\", \"Cell Phone Number\"],\n      handleFieldChange: this.props.handleFieldChange,\n      fieldDefaultVals: [this.props.globalState.officePhoneNum, this.props.globalState.cellPhoneNum],\n      autoComplete: false,\n      phoneNumValidity: this.props.phoneNumValidity,\n      isRequired: [true, false],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183\n      },\n      __self: this\n    }), React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 195\n      },\n      __self: this\n    }, \"University-Specific Programming\"), React.createElement(\"div\", {\n      className: \"sub-head-helper\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 196\n      },\n      __self: this\n    }, \"Optional Programming Message\"), React.createElement(UniversityProgramming, {\n      handleFieldChange: this.props.handleFieldChange,\n      fieldDefaultVals: this.props.globalState.specialMsg,\n      isRequired: false,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 197\n      },\n      __self: this\n    }), this.props.cantGenerateSig && GenerateSigError, React.createElement(Button, {\n      handleClick: this.props.handleClick,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 203\n      },\n      __self: this\n    }));\n  }\n\n}","map":{"version":3,"sources":["/Users/andrewuebe/email-sig-generator/src/components/Form.js"],"names":["React","Component","ReactDOM","DoubleInputStep","InputStep","Button","CheckboxStep","DegreeInfo","ParentInfo","PronounStep","AddressOptions","UniversityProgramming","IconButton","AddIcon","Form","constructor","state","firstNameDefault","lastNameDefault","render","undergradDegrees","props","underGradInfo","gradDegrees","gradInfo","parentDegrees","parentInfo","UndergradField","map","degree","index","handleDegreeChange","globalState","year","isYearValid","GradField","handleRemoveDegree","handleAddDegree","ParentField","handleAddParentDegree","GenerateSigError","handleFieldChange","firstName","lastName","middleName","handleUndergradAlumToggle","isUndergradAlum","handleGradAlumToggle","isGradAlum","handleParentAlumToggle","isParentAlum","title","department","handlePronounChange","address","officePhoneNum","cellPhoneNum","phoneNumValidity","specialMsg","cantGenerateSig","handleClick"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport DoubleInputStep from \"./DoubleInputStep\";\nimport InputStep from \"./InputStep\";\nimport Button from \"./Button\";\nimport CheckboxStep from \"./CheckboxStep\";\nimport DegreeInfo from \"./DegreeInfo\";\nimport ParentInfo from \"./ParentInfo\";\nimport PronounStep from \"./PronounStep\";\nimport AddressOptions from \"./AddressOptions\";\nimport UniversityProgramming from \"./UniversityProgramming\"; \nimport IconButton from \"@material-ui/core/IconButton\";\nimport AddIcon from \"@material-ui/icons/AddBoxOutlined\";\n\nexport default class Form extends Component {\n  constructor() {\n    super();\n    this.state = {\n      firstNameDefault: \"\",\n      lastNameDefault: \"\",\n    };\n  }\n\n  render() {\n    const undergradDegrees = this.props.underGradInfo;\n    const gradDegrees = this.props.gradInfo;\n    const parentDegrees = this.props.parentInfo;\n    const UndergradField = (\n      <div className=\"form-step degrees\">\n        {undergradDegrees.map((degree, index) => (\n          <DegreeInfo\n            key={index}\n            arrayID={index}\n            handleDegreeChange={this.props.handleDegreeChange}\n            fieldDefaultVals={[\n              \"\",\n              this.props.globalState.underGradInfo[index].year,\n            ]}\n            gradDegree={false}\n            isYearValid={degree.isYearValid}\n          />\n        ))}\n      </div>\n    );\n    const GradField = (\n      <div className=\"form-step degrees\">\n        {gradDegrees.map((degree, index) => (\n          <DegreeInfo\n            key={index}\n            arrayID={index}\n            handleRemoveDegree={this.props.handleRemoveDegree}\n            handleDegreeChange={this.props.handleDegreeChange}\n            fieldDefaultVals={[\n              this.props.globalState.gradInfo[index].degree,\n              this.props.globalState.gradInfo[index].year,\n            ]}\n            gradDegree={true}\n            isYearValid={degree.isYearValid}\n          />\n        ))}\n        <div className=\"add-degree\" onClick={this.props.handleAddDegree}>\n          <IconButton\n            onClick={this.props.handleAddDegree}\n            aria-label=\"add a degree\"\n            label=\"test\"\n          >\n            <AddIcon />\n          </IconButton>\n          Add Northwestern Degree\n        </div>\n      </div>\n    );\n\n    const ParentField = (\n      <div className=\"form-step degrees\">\n        {parentDegrees.map((degree, index) => (\n          <ParentInfo\n            key={index}\n            arrayID={index}\n            handleRemoveDegree={this.props.handleRemoveDegree}\n            handleDegreeChange={this.props.handleDegreeChange}\n            fieldDefaultVals={[\n              this.props.globalState.parentInfo[index].degree,\n              this.props.globalState.parentInfo[index].year,\n            ]}\n            isYearValid={degree.isYearValid}\n          />\n        ))}\n        <div className=\"add-degree\" onClick={this.props.handleAddParentDegree}>\n          <IconButton\n            onClick={this.props.handleAddParentDegree}\n            aria-label=\"add a degree\"\n            label=\"test\"\n          >\n            <AddIcon />\n          </IconButton>\n          Add another\n        </div>\n      </div>\n    );\n\n    const GenerateSigError = (\n      <div className=\"error-messages\">\n        You must fill all required fields (indicated with a *) before generating\n        a signature.\n      </div>\n    );\n    return (\n      <article className=\"sig-form\">\n        <h3>Name</h3>\n        <DoubleInputStep\n          fieldName={[\"firstName\", \"lastName\"]}\n          fieldLabel={[\"First Name\", \"Last Name\"]}\n          handleFieldChange={this.props.handleFieldChange}\n          fieldDefaultVals={[\n            this.props.globalState.firstName,\n            this.props.globalState.lastName,\n          ]}\n          isRequired={[true, true]}\n        />\n        <InputStep\n          fieldName={\"middleName\"}\n          fieldLabel={\"Middle or Former Name (Optional)\"}\n          fieldDefaultVals={this.props.globalState.middleName}\n          handleFieldChange={this.props.handleFieldChange}\n          isRequired={false}\n          halfWidth={true}\n        />\n        <h3>Alumni Designation</h3>\n        <div className=\"checkboxes\">\n          <div className=\"form-step\">\n            <CheckboxStep\n              fieldName=\"Are You a Northwestern Undergraduate Alum?\"\n              handleAlumToggle={this.props.handleUndergradAlumToggle}\n              isChecked={this.props.globalState.isUndergradAlum}\n            />\n            {this.props.isUndergradAlum && UndergradField}\n          </div>\n          <div className=\"form-step\">\n            <CheckboxStep\n              fieldName=\"Are You a Northwestern Graduate/Professional Degree Holder?\"\n              handleAlumToggle={this.props.handleGradAlumToggle}\n              isChecked={this.props.globalState.isGradAlum}\n            />\n            {this.props.isGradAlum && GradField}\n          </div>\n          <div className=\"form-step\">\n            <CheckboxStep\n              fieldName=\"Are You the Parent/Grandparent of a Northwestern Student or Graduate?\"\n              handleAlumToggle={this.props.handleParentAlumToggle}\n              isChecked={this.props.globalState.isParentAlum}\n            />\n            {this.props.isParentAlum && ParentField}\n          </div>\n        </div>\n        <h3>Job</h3>\n        <DoubleInputStep\n          fieldName={[\"title\", \"department\"]}\n          fieldLabel={[\"Job Title\", \"Department\"]}\n          handleFieldChange={this.props.handleFieldChange}\n          fieldDefaultVals={[\n            this.props.globalState.title,\n            this.props.globalState.department,\n          ]}\n          autoComplete={true}\n          isRequired={[true, true]}\n        />\n        <h3>Pronouns</h3>\n        <div className=\"sub-head-helper\">Optional</div>\n        <PronounStep\n          fieldName={[\"subject\", \"object\", \"possessive\"]}\n          fieldLabel={[\"Subject\", \"Object\", \"Possessive\"]}\n          handlePronounChange={this.props.handlePronounChange}\n        />\n        <h3>Address</h3>\n        <AddressOptions\n          handleFieldChange={this.props.handleFieldChange}\n          fieldDefaultVals={this.props.globalState.address}\n          isRequired={true}\n        />\n        <h3>Contact Information</h3>\n        <div className=\"sub-head-helper\">Cell phone number is optional</div>\n        <DoubleInputStep\n          fieldName={[\"officePhoneNum\", \"cellPhoneNum\"]}\n          fieldLabel={[\"Office Phone Number\", \"Cell Phone Number\"]}\n          handleFieldChange={this.props.handleFieldChange}\n          fieldDefaultVals={[\n            this.props.globalState.officePhoneNum,\n            this.props.globalState.cellPhoneNum,\n          ]}\n          autoComplete={false}\n          phoneNumValidity={this.props.phoneNumValidity}\n          isRequired={[true, false]}\n        />\n        <h3>University-Specific Programming</h3>\n        <div className=\"sub-head-helper\">Optional Programming Message</div>\n        <UniversityProgramming\n          handleFieldChange={this.props.handleFieldChange}\n          fieldDefaultVals={this.props.globalState.specialMsg}\n          isRequired={false}\n        />\n        {this.props.cantGenerateSig && GenerateSigError}\n        <Button handleClick={this.props.handleClick}></Button>\n      </article>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}